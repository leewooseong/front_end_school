@charset "utf-8";

/* font */

/* 이 폰트는 폰트 갯수를 줄이기 위해 사진으로 대체 */
/* @font-face {
  font-family: "OTEnjoystoriesBA";
  src: url("https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_two@1.0/OTEnjoystoriesBA.woff")
    format("woff");
  font-weight: normal;
  font-style: normal;
} */

@font-face {
  font-family: "GmarketSansBold";
  src: url("https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2001@1.1/GmarketSansBold.woff")
    format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "GmarketSansMedium";
  src: url("https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2001@1.1/GmarketSansMedium.woff")
    format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "Noto Sans KR";
  font-style: normal;
  font-weight: 400;
  src: url("https://fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Regular.woff2")
      format("woff2"),
    url("https://fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Regular.woff")
      format("woff"),
    url("https://fonts.gstatic.com/ea/notosanskr/v2/NotoSansKR-Regular.otf")
      format("opentype");
}

html,
body {
  width: 100%;
  height: 100%;
}

#app {
  width: 100%;
  height: 100%;
  font-family: GmarketSansMedium;
  background-color: #5b2386;
  color: white;
  text-align: center;
}

/* header 부분 */
/* header */
.tit-law {
  /* ***몰랐던 부분: margin-collapse 발생 > 부모 요소와 자식 요소가 존재할 때, 자식 요소의 마진 탑 혹은 바텀 값이 부모의 높이에 영향을 미치지 않는 현상, 부모랑 자식이랑 margin이 겹치는 현상 > 해결방법 notion 참고 */
  /* 따라서 margin-top은 자식에게 주지 말고 가장 밖의 부모요소에게 주자 */
  margin-top: 194px;
  display: inline-block;
  position: relative;
}

/* background clock image: 중앙정렬, 가상요소로 처리 */
.tit-law::after {
  display: block;
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  /* 가상요소에는 max-width를 적용하기가... 어떻게 처리해야할까 > 질문남겨보기! */
  width: 225px;
  height: 225px;
  margin: -112px 0 0 -112px;
  background-image: url("/img2/title_bg.png");
  /* 이미지가 잘리지 않게 width, height에 맞춰주는 것 */
  background-size: 225px;
}

/* header main image */
.tit-law .img-tit {
  /* z-index를 쓰기 위해선 position 속성이 꼭 필요하다! */
  /* z-index 10단위 적용: 페이지 많아지고 복잡해지면 길 잃기 쉽다. */
  position: relative;
  z-index: 10;
}
/* Tip: css 적용하기 전에 개발자 도구를 적극적으로 활용해서 적용된 화면을 보고 css 파일을 고치면 편하다. */

/* 1만시간의 법칙 contents 부분 */
/* image-text */
.img-txt {
  /* 반응형 웹페이지 팁!! width 값을 그냥 주면 줄어들 때 width 아래로는 줄어들지 않는다. > 따라서 max-width를 활용해서 크기가 변할 수 있게 적용한다. */
  margin: 125px auto 78px;
  max-width: 486px;
}

/* txt-desc: 총 width == 글자의크기 + 이미지의 크기 + 이미지와 글자 사이의 공백 */
.txt-desc {
  position: relative;
  margin: 0 auto 102px;
  line-height: 24px;
  font-size: 18px;
  /* 전체 넓이를 잡아주면 가상 요소들이 display: block 성질 때문에 퍼져있던게 모여진다. */
  width: 493px;
}

.txt-desc .tit-desc {
  font-size: 24px;
  font-weight: bold;
}

.txt-desc::after,
.txt-desc::before {
  display: block;
  margin-top: -16px;
  position: absolute;
  top: 50%;
  content: "";
  width: 37px;
  height: 32px;
}

.txt-desc::before {
  /* 가상요소에 block, inline-block, inline 어떤 것을 써야하는가? */
  /* 답: block, inline-block 두 개는 사용 가능 > 둘의 차이점은 가상요소가 가지는 width정도, block: width 100%, inline-block: 요소의 width 크기 */
  /* ※ inline은 width와 height를 못가지기 때문에 안되는 것으로 추정 */
  left: 0%;
  background-image: url("../img2/txt-left.png");
}

.txt-desc::after {
  right: 0%;
  background-image: url("../img2/txt-right.png");
}

.cont-inp {
}
